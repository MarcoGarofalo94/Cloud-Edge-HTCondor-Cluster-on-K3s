apiVersion: v1
kind: Service
metadata:
  labels:
    name: htcondor-worker
    visualize: "true"
  name: htcondor-worker
spec:
  ports:
    - port: 80
      targetPort: 80
      name: http
  selector:
    app: htcondor-worker

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: htcondor-worker
  name: htcondor-worker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: htcondor-worker
  template:
    metadata:
      annotations: 
        prometheus.io/path: "/status/format/prometheus"
        prometheus.io/scrape: "true"
        prometheus.io/port: "80"
      labels:
        app: htcondor-worker
    spec:
      containers:
      - name: htcondor-worker
        lifecycle:
          preStop:
            exec:
              command: ["/bin/bash", "/preStop.sh"]
        securityContext:
        securityContext:
          privileged: true
        imagePullPolicy: Always
        image: marcog94/worker:9.x-cont
        resources:
          requests:
            memory: "1.0Gi"
            cpu: "500m"
          limits:
            memory: "1.0Gi"
            cpu: "500m"
        env:
        - name: CONDOR_HOST
          value: "htcondor-central-manager"
        - name: SEC_PASSWORD_FILE
          value: "/etc/condor/pool_password/password"
        - name: DOCKER_HOST
          value: unix:///shared/docker.sock
        volumeMounts:
          - name: nfs-pvc
            mountPath: /nfs
          # - name: shared-lib
          #   mountPath: /home/slot1_1/shared-lib
          - name: pool-password
            mountPath: /etc/condor/pool_password
          - name: docker-shared
            mountPath: /shared            
        ports:
        - containerPort: 9618
          protocol: TCP
      - name: dind-daemon
        image: docker:dind
        # 64 is the condor group
        args: ["-G", "64"]
        resources:
          limits:
            memory: "4G"
        securityContext:
          privileged: true
        env:
          - name: DOCKER_HOST
            value: unix:///shared/docker.sock
        volumeMounts:
          - name: docker-shared
            mountPath: /shared
      volumes:
      - name: nfs-pvc
        persistentVolumeClaim:
          claimName: nfs-claim
      # - name: shared-lib
      #   persistentVolumeClaim:
      #     claimName: htcondor-worker-slib-pvc
      - name: docker-shared
        emptyDir: {}
      - name: pool-password
        secret:
          defaultMode: 0600
          secretName: htcondor-pool-password